class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode();
        ListNode answer = head;
        boolean carry = false;
        while(l1 != null && l2!= null){
            int num;
            if(carry){
                num = l1.val + l2.val + 1;
            } else {
                num = l1.val + l2.val;
            }
            if(num > 9){
                carry = true;
                num = num - 10;
            } else {
                carry = false;
            }
            ListNode temp = new ListNode();
            temp.val = num;
            head.next = temp;
            head = head.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        
        if(l1 == null && l2 == null && carry){
            ListNode temp = new ListNode();
            temp.val = 1;
            head.next = temp;
        }
        
        if(l1 != null){
            if(carry){
                head.next = l1;
                ListNode prev = l1;
                while(l1 != null && carry){
                    l1.val = l1.val + 1;
                    if(l1.val < 10){
                        carry = false;
                    } else {
                        l1.val = l1.val - 10;
                    }
                    if(l1.next != null){
                        prev = l1.next;
                    }
                    l1 = l1.next;
                }
                if(l1 == null && carry){
                    ListNode temp = new ListNode();
                    temp.val = 1;
                    prev.next = temp;
                }
            } else {
                head.next = l1;
            }
        }
        
        if(l2 != null){
            if(carry){
                head.next = l2;
                ListNode prev = l2;
                while(l2 != null && carry){
                    l2.val = l2.val + 1;
                    if(l2.val < 10){
                        carry = false;
                    } else {
                        l2.val = l2.val - 10;
                    }
                    if(l2.next != null){
                        prev = l2.next;
                    }
                    l2 = l2.next;
                }                
                if(l2 == null && carry){
                    ListNode temp = new ListNode();
                    temp.val = 1;
                    prev.next = temp;
                }
            } else {
                head.next = l2;
            }
        }
        
        return answer.next;
    }
